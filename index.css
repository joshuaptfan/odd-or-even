:root {
	font-family: Arial, Helvetica, sans-serif;
	font-size: 1vh;
	font-weight: 700;
	text-align: center;
	color: #FFF;
	background-color: #000;
	-webkit-tap-highlight-color: transparent;
	-webkit-user-select: none;
	   -moz-user-select: none;
	        user-select: none;
}

body {
	margin: 0;
}

*:focus {
	outline: none;
}

.warn-ES6,
noscript {
	display: block;
	line-height: 5rem;
	width: 100%;
	font-size: 3rem;
	background-color: #F70;
}

.warn-ES6 {
	display: none;
}

.warn-ES6 > a {
	color: #07F;
}

.page {
	display: none;
	position: fixed;
	margin-right: -50%;
	top: 50%;
	left: 0;
	width: 100%;
	transform: translateY(-50%);
}

.activated,
.deactivated {
	display: initial;
}

.fly-out-left {
	animation: fly-left .5s;
}

.fly-in-left {
	animation: fly-right .5s reverse;
}

.fly-out-right {
	animation: fly-right .5s;
}

.fly-in-right {
	animation: fly-left .5s reverse;
}

@keyframes fly-left {
	to {
		left: -100%;
	}
}

@keyframes fly-right {
	to {
		left: 200%;
	}
}

h1 {
	font-size: 6rem;
}

h2 {
	margin: 2rem 0;
	font-size: 5rem;
	color: #AAA;
}

h4 {
	font-size: 2rem;
	font-style: italic;
}

p {
	font-size: 3rem;
}

a {
	color: #49F;
}

button {
	display: inline-block;
	padding: 0;
	font-family: Arial, Helvetica, sans-serif;
	font-size: 5rem;
	font-weight: 700;
	vertical-align: middle;
	color: #FFF;
	background-color: transparent;
	border: .2rem solid #FFF;
	border-radius: 5rem;
	cursor: pointer;
}

button:active {
	color: #000;
	background-color: #FFF;
}

button:disabled {
	color: #444;
	border-color: #444;
}

.home > button,
.about > button,
.start-btn,
.game > .settings > :not(.close-btn) {
	display: block;
	margin: 5rem auto;
	padding: 1.5rem 0;
	width: 22rem;
}

.home > button:first-of-type,
.start-btn {
	margin-top: 8rem;
}

.home > .tutorial-btn {
	margin-top: -3.5rem;
	padding: .5rem;
	width: 18rem;
	font-size: 3rem;
}

.warn {
	display: none;
	position: absolute;
	margin: 0 auto;
	padding: 0 1rem;
	bottom: -5rem;
	left: 0;
	right: 0;
	width: max-content;
	font-size: 3rem;
	color: #C00;
	background-color: #000;
}

.home.warn-portrait > .warn {
	color: #ED0;
}

.home.activated.warn-touch > .warn,
.home.activated.warn-portrait > .warn {
	display: initial;
}

.warn::before {
	position: absolute;
	z-index: -1;
	top: 50%;
	left: 50%;
	height: 2.3rem;
	width: 100vw;
	transform: translate(-50vw, -50%);
	background: repeating-linear-gradient(135deg, #000 0 2rem, #C00 2rem 4rem);
	content: '';
}

.home.warn-portrait > .warn::before {
	background: repeating-linear-gradient(135deg, #000 0 2rem, #ED0 2rem 4rem);
}

.home > .fullscreen-btn {
	display: none;
	position: absolute;
	margin: 0;
	padding: .8rem;
	top: calc(50% + 43rem);
	left: 50%;
	height: 5rem;
	width: 5rem;
	transform: translateX(-50%);
	transition: opacity .2s;
}

.home > .fullscreen-btn > svg {
	stroke-linecap: square;
}

.home.deactivated > .fullscreen-btn {
	opacity: 0;
}

html:fullscreen .home > .fullscreen-btn {
	color: #000;
	background-color: #FFF;
}

html:-webkit-full-screen .home > .fullscreen-btn {
	color: #000;
	background-color: #FFF;
}

.blur {
	filter: blur(.5rem);
}

h2:not(:first-of-type) {
	margin-top: 5rem;
}

.setup.solo > :not(.solo) {
	display: none;
}

.incr-points {
	margin: 0 2rem;
	height: 7rem;
	width: 7rem;
}

.num-points {
	display: inline-block;
	position: relative;
	height: 7rem;
	width: 6rem;
	line-height: 7rem;
	font-size: 5rem;
	vertical-align: middle;
}

.num-points:empty::before {
	position: absolute;
	left: 0;
	height: 100%;
	width: 100%;
	background: no-repeat center/100% url(images/infinity.svg);
	content: '';
}

.setup > .list {
	margin: 0 auto;
	width: max-content;
	text-align: left;
}

label {
	display: block;
	position: relative;
	margin: 1rem 0;
	padding-left: 7.5rem;
	font-size: 5rem;
	cursor: pointer;
}

label > input {
	position: absolute;
	-webkit-appearance: none;
	        appearance: none;
	left: 1rem;
	height: 5rem;
	width: 5rem;
	border: .2rem solid #FFF;
	border-radius: 50%;
	pointer-events: none;
}

label:active > input {
	background-color: #FFF;
}

label > input:checked::before {
	position: absolute;
	top: 50%;
	left: 50%;
	height: 2.5rem;
	width: 2.5rem;
	transform: translate(-50%, -50%);
	background-color: #FFF;
	border-radius: 50%;
	content: '';
}

.handicap-btn {
	position: relative;
	padding: 1rem 0;
	width: 19rem;
	border-radius: 1rem;
}

.about > p > img {
	height: 16rem;
	image-rendering: -moz-crisp-edges;
	image-rendering: pixelated;
}

.about > button {
	margin-top: -1rem;
	padding: .5rem;
	font-size: 3rem;
}

.about > .install-text,
.about > .install-text > .manual > *,
.about > .install-btn {
	display: none;
}

.about.install > .install-text {
	display: block;
}

.about.auto > .install-text > .manual {
	display: none;
}

.about.install.auto > .install-btn {
	display: block;
}

.about.android > .install-text > .manual > .android {
	display: inline;
}

.about.ios > .install-text > .manual > .ios {
	display: inline-block;
	margin: -.2rem;
	height: 3.3rem;
	stroke: #49F;
}

.about > .paypal {
	display: inline-block;
	margin-top: -1rem;
	padding: .8rem 0;
	width: 22rem;
	background-color: #FFC439;
	border-radius: 5rem;
}

.about > .paypal:active {
	background-color: #F2BA36;
}

.about > .paypal > img {
	position: relative;
	top: .4rem;
	height: 3rem;
}

.game {
	height: 100%;
}

.game.solo > .versus {
	display: none;
}

.game:not(.solo) > .solo {
	display: none;
}

.border {
	position: absolute;
	height: 100%;
	width: 100%;
	opacity: 0;
	box-sizing: border-box;
	border: 1rem solid #FFF;
	border-radius: 4.5rem;
	transition: opacity .3s;
}

.game.tutorial > .border {
	z-index: 4;
	opacity: 1;
}

.game.tutorial[data-step^='1'] > .border {
	pointer-events: none;
}

.border > svg {
	position: absolute;
	bottom: -1rem;
	left: -1rem;
	height: 14.5rem;
	width: 14.5rem;
	fill: #000;
}

.border > svg.sm {
	display: none;
}

.border::before,
.border::after {
	position: absolute;
	padding: 0 1rem;
	top: 50%;
	left: .5rem;
	transform: translate(-50%, -50%) rotate(270deg);
	font-size: 3rem;
	background-color: #000;
	content: attr(data-text);
}

.border::after {
	left: auto;
	right: .5rem;
	transform: translate(50%, -50%) rotate(90deg);
}

.expression.solo {
	position: absolute;
	top: 32%;
	width: 100%;
}

.timer {
	position: absolute;
	top: 49.5%;
	left: 50%;
	height: 1rem;
	width: 30rem;
	background-color: #444;
	transform: translateX(-50%);
	transition: width .2s;
}

.timer::before {
	position: absolute;
	top: 0;
	left: 50%;
	height: 1rem;
	width: 0;
	background-color: #FFF;
	transform: translateX(-50%);
	content: '';
}

.timer.countdown::before {
	animation: timer 3s linear reverse;
}

.timer.running::before {
	animation: timer linear;
	animation-duration: inherit;
}

@keyframes timer {
	from {
		width: 100%;
	}
}

.lives.solo {
	position: absolute;
	top: 53%;
	left: 50%;
	transform: translateX(-50%);
}

.lives.solo > img {
	margin: 0 .25rem;
	height: 3rem;
}

.game > .buzzer.solo {
	position: absolute;
	margin-right: -50%;
	top: 62%;
	left: 50%;
	transform: translateX(-50%);
}

.game > .buzzer.solo > :not(.restart-btn) {
	margin: auto 1rem;
	padding: 1.7rem;
	width: 18rem;
	color: #000;
	background-color: #FFF;
	border: none;
}

.game > .buzzer.solo > .neg {
	animation: buzzer-neg .6s;
}

.game.color-blind > .buzzer.solo > .neg {
	animation: buzzer-neg-color-blind .6s;
}

.game > .buzzer.solo > .pos {
	animation: buzzer-pos .6s;
}

.game.color-blind > .buzzer.solo > .pos {
	animation: buzzer-pos-color-blind .6s;
}

@keyframes buzzer-neg {
	from {
		color: #FFF;
		background-color: #F00;
	}
}

@keyframes buzzer-neg-color-blind {
	from {
		color: #FFF;
		background-color: #F70;
	}
}

@keyframes buzzer-pos {
	from {
		color: #FFF;
		background-color: #0F0;
	}
}

@keyframes buzzer-pos-color-blind {
	from {
		color: #FFF;
		background-color: #07F;
	}
}

.buzzer.solo > .restart-btn {
	position: absolute;
	top: 0;
	left: 50%;
	height: 9.2rem;
	width: 38.4rem;
	background-color: #000;
	opacity: 0;
	pointer-events: none;
	transform: translateX(-50%);
}

.buzzer.solo > .restart-btn > svg {
	height: 7rem;
}

.score {
	position: absolute;
	margin-right: -50%;
	top: 75%;
	left: 50%;
	transform: translateX(-50%);
}

.buzzer.versus {
	position: absolute;
	top: 50%;
	left: 50%;
	height: 33rem;
	width: 33rem;
	transform: translate(-50%, -50%);
	transition: filter .2s;
}

.game.tutorial[data-step^='0'] > .buzzer.versus {
	filter: blur(2rem);
}

.game.tutorial[data-step^='1'].mark-up > .buzzer.versus::before,
.game.tutorial[data-step^='1'].mark-up > .buzzer.versus::after,
.game.tutorial[data-step^='1'].mark-dn > .buzzer.versus::before,
.game.tutorial[data-step^='1'].mark-dn > .buzzer.versus::after {
	position: absolute;
	z-index: 1;
	left: 50%;
	height: 10rem;
	width: 10rem;
	background: no-repeat center/100% url(images/hand.svg);
	pointer-events: none;
	content: '';
	animation: blink-hand 1s infinite;
}

.game.tutorial[data-step^='1'].mark-up > .buzzer.versus::before {
	top: 27%;
	transform: translate(-60%, -50%) rotate(180deg);
}

.game.tutorial[data-step^='1'].mark-up > .buzzer.versus::after {
	top: 73%;
	left: 84%;
	transform: translate(-40%, -50%);
}

.game.tutorial[data-step^='1'].mark-dn > .buzzer.versus::before {
	top: 27%;
	left: 16%;
	transform: translate(-60%, -50%) rotate(180deg);
}

.game.tutorial[data-step^='1'].mark-dn > .buzzer.versus::after {
	top: 73%;
	transform: translate(-40%, -50%);
}

@keyframes blink-hand {
	50% {
		opacity: .3;
	}
}

.wave {
	position: absolute;
	z-index: -1;
	top: 50%;
	left: 50%;
	height: 70rem;
	width: 100%;
	transform: translateX(-50%);
	transform-origin: center top;
	overflow: hidden;
	pointer-events: none;
}

.wave::before {
	position: absolute;
	left: 50%;
	height: 33rem;
	width: 33rem;
	transform: translate(-50%, -50%) scale(0);
	background: radial-gradient(circle farthest-side, transparent 50%, #F00 75%);
	border-radius: 50%;
	content: '';
}

.game.color-blind > .buzzer.versus > .wave::before {
	background: radial-gradient(circle farthest-side, transparent 50%, #F70 75%);
}

.buzzer.versus.pos > .wave::before {
	background: radial-gradient(circle farthest-side, transparent 50%, #0F0 75%);
}

.game.color-blind > .buzzer.versus.pos > .wave::before {
	background: radial-gradient(circle farthest-side, transparent 50%, #07F 75%);
}

.buzzer.versus.game-over > .wave {
	overflow: visible;
}

.buzzer.versus.game-over > .wave::before {
	background: radial-gradient(circle farthest-side, transparent 50%, #FFF 75%) !important;
}

.buzzer.versus.wave-up > .wave {
	transform: translateX(-50%) rotate(180deg);
}

.buzzer.versus.wave-up > .wave::before,
.buzzer.versus.wave-dn > .wave::before,
.buzzer.versus.game-over > .wave::before {
	animation: wave .5s ease-out;
}

@keyframes wave {
	from {
		transform: translate(-50%, -50%) scale(1);
	} to {
		transform: translate(-50%, -50%) scale(3.3);
		opacity: 0;
	}
}

.sweep {
	position: absolute;
	z-index: -1;
	top: 50%;
	left: 50%;
	height: 37rem;
	width: 0;
	transform: translate(-50%, -50%);
	overflow: hidden;
	pointer-events: none;
}

.sweep::before {
	position: absolute;
	top: 50%;
	left: 50%;
	height: 35rem;
	width: 35rem;
	transform: translate(-50%, -50%);
	border: 1rem solid #FFF;
	border-radius: 50%;
	content: '';
}

.buzzer.versus.countdown > .sweep {
	animation: sweep 3s linear;
}

.buzzer.versus.wave-up > .sweep,
.buzzer.versus.wave-dn > .sweep {
	animation: sweep .75s linear;
}

.buzzer.versus.game-over > .sweep {
	animation: sweep 2s linear;
}

@keyframes sweep {
	from {
		width: 100%;
		opacity: 0;
	}
}

.buzzer.versus > button {
	position: absolute;
	left: 0;
	height: 100%;
	width: 100%;
	font-size: 9rem;
	color: #000;
	background-color: #B00;
	border: none;
	border-radius: 50%;
}

.game.color-blind > .buzzer.versus > .no {
	background-color: #B50;
}

.buzzer.versus > button.active {
	color: #FFF;
	background-color: #F00;
}

.game.color-blind > .buzzer.versus > .no.active {
	background-color: #F70;
}

.buzzer.versus > .no::before,
.buzzer.versus > .no::after {
	position: absolute;
	top: 50%;
	left: 16%;
	transform: translate(-50%, -50%);
	pointer-events: none;
	content: '\D7';
}

.buzzer.versus > .no::after {
	left: 84%;
}

.buzzer.versus > .yes {
	top: 28.5%;
	left: 28.5%;
	height: 43%;
	width: 43%;
	background-color: #0B0;
	border: .8rem solid #000;
}

.game.color-blind > .buzzer.versus > .yes {
	background-color: #05B;
}

.buzzer.versus > .yes.active {
	background-color: #0F0;
}

.game.color-blind > .buzzer.versus > .yes.active {
	background-color: #07F;
}

.buzzer.versus > .restart-btn {
	padding: 2rem;
	color: #FFF;
	background-color: #000;
	opacity: 0;
	border: #FFF solid 1rem;
	box-shadow: 0 0 0 1px #000;
	pointer-events: none;
	transition: opacity .3s;
}

.buzzer.game-over > .restart-btn {
	opacity: 1;
	pointer-events: auto;
	animation: fade-in 2s;
}

.buzzer > .restart-btn:active {
	color: #000;
	background-color: #FFF;
}

.buzzer > .restart-btn > svg {
	stroke-linecap: butt;
	animation: spin 12s linear infinite;
}

@keyframes fade-in {
	from {
		filter: brightness(0);
	}
}

@keyframes spin {
	to {
		transform: rotate(360deg);
	}
}

.team {
	position: absolute;
	z-index: 1;
	margin-right: -50%;
	left: 50%;
	height: calc(50% - 18.5rem);
	width: 100%;
	font-size: 5rem;
}

.game.tutorial > .team::before {
	position: absolute;
	z-index: 2;
	margin-right: -50%;
	padding: 1rem;
	top: -8rem;
	left: 50%;
	line-height: 4rem;
	transform: translateX(-50%);
	font-size: 3rem;
	white-space: pre-wrap;
	background-color: #000D;
	border: .5rem solid #FF0;
	border-radius: 1rem;
	content: attr(data-text);
}

.team.up {
	top: 0;
	transform: translateX(-50%) rotate(180deg);
}

.team.dn {
	bottom: 0;
	transform: translateX(-50%);
}

.expression {
	margin: 4rem 0;
	line-height: 9rem;
	font-size: 8rem;
	white-space: nowrap;
}

.game.tutorial[data-step='00'] > .team > .expression {
	filter: blur(2rem);
}

.name {
	margin: 0 auto;
	padding: 0 .5rem;
	width: max-content;
	font-size: 4rem;
	color: #AAA;
	border-radius: .5rem;
	transition: filter .2s;
}

.game.tutorial[data-step*='1'].mark-up > .up > .name,
.game.tutorial[data-step*='1'].mark-dn > .dn > .name {
	position: relative;
	animation: blink-name 1s infinite;
}

.game.tutorial[data-step*='1'].mark-up > .up > .name::before,
.game.tutorial[data-step*='1'].mark-dn > .dn > .name::before {
	position: absolute;
	margin-right: .3rem;
	right: 100%;
	color: #FF0;
	content: '=';
}

@keyframes blink-name {
	50% {
		color: #000;
		background-color: #FF0;
	}
}

.point {
	position: relative;
	font-size: 5rem;
	color: #FFF;
	transition: filter .2s;
}

.point.flash::before {
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	opacity: 0;
	pointer-events: none;
	content: attr(data-value);
}

.point.neg::before {
	color: #F00;
}

.game.color-blind > .team > .point.neg::before {
	color: #F70;
}

.point.pos::before {
	color: #0F0;
}

.game.color-blind > .team > .point.pos::before {
	color: #07F;
}

.point.flash::before {
	animation: flash .5s ease-out;
}

@keyframes flash {
	from {
		opacity: 1;
	} to {
		top: 0;
		transform: translate(-50%, -50%) scale(10);
	}
}

.lead {
	position: absolute;
	margin-top: -1.5rem;
	left: 0;
	border: 1.5rem solid transparent;
	border-left: 1.5rem solid #FFF;
	transition: top .1s;
}

.lead::before {
	position: absolute;
	top: -1.5rem;
	left: calc(100vw - 4.5rem);
	border: 1.5rem solid transparent;
	border-right: 1.5rem solid #FFF;
	content: '';
}

.game.tutorial > .lead {
	display: none;
}

.game > progress {
	display: none;
	position: absolute;
	-webkit-appearance: none;
	bottom: 2rem;
	right: 4rem;
	height: 1rem;
	width: 14rem;
	background-color: #444;
	border: none;
	border-radius: 1rem;
}

::-webkit-progress-bar {
	background-color: #444;
	border-radius: 1rem;
}

::-webkit-progress-value {
	background-color: #FFF;
	border-radius: 1rem;
	transition: width .2s;
}

::-moz-progress-bar {
	background-color: #FFF;
	border-radius: 1rem;
	transition: width .2s;
}

.game > button,
.close-btn,
.back-btn {
	position: absolute;
	z-index: 2;
	padding: .8rem;
	bottom: 2rem;
	left: 2rem;
	height: 5rem;
	width: 5rem;
}

svg {
	display: block;
	margin: auto;
	stroke: currentColor;
	stroke-width: 1;
	stroke-linejoin: round;
	stroke-linecap: round;
	fill: none;
	pointer-events: none;
}

.game > .prev-btn,
.game > .next-btn {
	display: none;
	z-index: 4;
	bottom: 50%;
	left: 6rem;
	height: 6rem;
	width: 6rem;
	transform: translateY(50%);
}

.game > .next-btn {
	left: auto;
	right: 6rem;
}

.game > .versus-btn {
	display: none;
}

.game.tutorial[data-step='11'] > .versus-btn {
	display: block;
	position: absolute;
	bottom: 2rem;
	left: auto;
	right: 2rem;
	width: 18rem;
	font-size: 2.8rem;
}

.game.tutorial[data-step*='0'] > progress,
.game.tutorial > .prev-btn,
.game.tutorial > .next-btn {
	display: initial;
}

.game > .menu-btn {
	z-index: 3;
}

.game.tutorial > .menu-btn {
	opacity: 0;
}

.menu-btn > svg {
	width: 3rem;
}

.game > .restart-btn {
	opacity: 0;
	transition: left .2s, opacity .2s;
}

.restart-btn > svg {
	stroke-linejoin: miter;
}

.menu-btn.opened ~ .restart-btn {
	left: 9rem;
	opacity: 1;
}

.home-btn {
	opacity: 0;
	transition: left .3s, opacity .3s;
}

.home-btn > svg {
	fill: currentColor;
}

.menu-btn.opened ~ .home-btn {
	left: 16rem;
	opacity: 1;
}

.settings-btn {
	opacity: 0;
	transition: bottom .4s, left .4s, opacity .4s;
}

.menu-btn.opened ~ .settings-btn {
	bottom: 9rem;
	opacity: 1;
}

.game > .settings {
	position: absolute;
	top: 0;
	height: 200rem;
	width: 100%;
	background: linear-gradient(#0006 50%, #000 57%);
	opacity: 0;
	pointer-events: none;
	transition: top .4s, opacity .4s;
}

.game.settings > .settings {
	z-index: 4;
	top: -50rem;
	opacity: 1;
	pointer-events: auto;
}

.game > .settings > :not(.close-btn) {
	margin: 2rem auto;
	width: 32rem;
}

.game > .settings > .color-blind-btn {
	margin-top: 126rem;
}

.game > .settings.fullscreen-enabled > .color-blind-btn {
	margin-top: 119rem;
}

.game.color-blind > .settings > .color-blind-btn {
	color: #000;
	background-color: #FFF;
}

.game > .settings > .fullscreen-btn {
	display: none;
}

.game > .settings.fullscreen-enabled > .fullscreen-btn {
	display: block;
}

html:fullscreen .settings > .fullscreen-btn {
	color: #000;
	background-color: #FFF;
}

html:-webkit-full-screen .settings > .fullscreen-btn {
	color: #000;
	background-color: #FFF;
}

.game > .settings > .close-btn {
	margin: 0;
	padding: .8rem;
	top: calc(50% + 43rem);
	bottom: auto;
	left: 50%;
	transform: translateX(-50%);
}

.back-btn {
	display: none;
}

.setup.activated ~ .back-btn,
.about.activated ~ .back-btn,
.game.tutorial.activated + .back-btn {
	display: initial;
	animation: fade-in-left .5s;
}

.setup.deactivated ~ .back-btn,
.about.deactivated ~ .back-btn {
	animation: fade-out-right .5s;
}

.game.activated + .back-btn {
	animation: fade-out-left .5s;
}

@keyframes fade-in-left {
	from {
		left: 3rem;
		opacity: 0;
	}
}

@keyframes fade-out-right {
	to {
		left: 3rem;
		opacity: 0;
	}
}

@keyframes fade-out-left {
	to {
		left: 1rem;
		opacity: 0;
	}
}

.select-bg {
	display: none;
	position: fixed;
	z-index: 2;
	margin-top: -50rem;
	top: 50%;
	left: 0;
	height: 100rem;
	width: 100%;
	background-color: rgba(0, 0, 0, .7);
}

.select {
	position: absolute;
	padding: .5rem 0;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	text-align: left;
	border: .2rem solid #FFF;
	border-radius: 1rem;
}

.select > button {
	display: block;
	position: relative;
	padding: .5rem 0;
	width: 19rem;
	border: none;
	border-radius: 0;
}

.select > button:not(:last-of-type) {
	box-shadow: 0 1.1rem 0 -1rem #444;
}

button.uparr,
button.dnarr {
	padding-right: 4rem;
}

button.uparr::before,
button.dnarr::before {
	position: absolute;
	margin-top: -1.5rem;
	top: 50%;
	right: 3.2rem;
	height: 3.5rem;
	width: .6rem;
	background-color: #FFF;
	content: '';
}

button.dnarr::before {
	margin-top: -2rem;
}

button.uparr:active::before,
button.dnarr:active::before,
button.uparr.selected::before,
button.dnarr.selected::before {
	background-color: #000;
}

button.uparr::after,
button.dnarr::after {
	position: absolute;
	right: 2.2rem;
	height: 0;
	width: 0;
	border: 1.3rem solid transparent;
	content: '';
}

button.uparr::after {
	margin-top: -3.1rem;
	top: 50%;
	border-bottom: 1.3rem solid #FFF;
}

button.uparr:active::after,
button.uparr.selected::after {
	border-bottom: 1.3rem solid #000;
}

button.dnarr::after {
	margin-bottom: -3.1rem;
	bottom: 50%;
	border-top: 1.3rem solid #FFF;
}

button.dnarr:active::after,
button.dnarr.selected::after {
	border-top: 1.3rem solid #000;
}

button.selected {
	color: #000;
	background-color: #FFF;
}

@media only screen
and (max-width: 480px) {
	.home > .fullscreen-btn,
	.game > .settings > .close-btn {
		top: calc(50% + 42rem);
	}

	.border {
		border-radius: 5rem;
	}

	.border > svg.lg {
		display: none;
	}

	.border > svg.sm {
		display: initial;
		height: 15.5rem;
		width: 15.5rem;
	}

	.buzzer.versus {
		height: 40rem;
		width: 40rem;
	}

	.game.tutorial > .buzzer.versus::before,
	.game.tutorial > .buzzer.versus::after {
		height: 12rem;
		width: 12rem;
	}

	.sweep {
		height: 45rem;
	}

	.sweep::before {
		height: 42.4rem;
		width: 42.4rem;
		border-width: 1.2rem;
	}

	.buzzer.versus > button {
		font-size: 10.8rem;
	}

	.buzzer.versus > .yes {
		border-width: 1rem;
	}

	.buzzer.versus > .restart-btn {
		border-width: 1.2rem;
	}

	.team {
		height: calc(50% - 22.4rem);
	}

	.game.tutorial > .team::before {
		top: -10rem;
	}

	.expression {
		margin: 2rem 0;
	}

	.game > progress {
		bottom: 9rem;
		right: 2rem;
	}

	.home > .fullscreen-btn,
	.game > button,
	.close-btn,
	.back-btn {
		height: 6rem;
		width: 6rem;
	}

	.game > .prev-btn,
	.game > .next-btn {
		bottom: 5rem;
	}

	.game > .prev-btn {
		left: auto;
		right: 10rem;
	}

	.game > .next-btn {
		right: 2rem;
	}

	.game.tutorial[data-step='11'] > .versus-btn {
		width: 14rem;
		bottom: 9rem;
		font-size: 3.4rem;
	}

	.menu-btn > svg {
		width: 3.6rem;
	}

	.menu-btn.opened ~ .restart-btn {
		left: 10rem;
	}

	.menu-btn.opened ~ .home-btn {
		left: calc(100% - 16rem);
	}

	.menu-btn.opened ~ .settings-btn {
		bottom: 2rem;
		left: calc(100% - 8rem);
	}
}
